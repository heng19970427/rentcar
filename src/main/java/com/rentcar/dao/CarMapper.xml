<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rentcar.dao.CarMapper" >

    <resultMap id="BaseResultMap" type="com.rentcar.pojo.Car" >
        <id column="carId" property="carId" jdbcType="INTEGER" />
        <result column="plateNumber" property="plateNumber" jdbcType="VARCHAR" />
        <result column="color" property="color" jdbcType="VARCHAR" />
        <result column="desc" property="desc" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="frameId" property="frameId" jdbcType="VARCHAR" />
        <result column="brand" property="brand" jdbcType="VARCHAR" />
        <result column="img" property="img" jdbcType="VARCHAR" />
        <result column="rentFee" property="rentFee" jdbcType="REAL" />
        <result column="deposit" property="deposit" jdbcType="REAL" />
        <result column="capacity" property="capacity" jdbcType="REAL" />
        <result column="initFuel" property="initFuel" jdbcType="REAL" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="belong" property="belong" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        carId, plateNumber, color, desc, type, frameId, brand, img, rentFee, deposit, capacity, 
        initFuel, status, belong
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rentcar.pojo.CarExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from car
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from car
        where carId = #{carId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from car
        where carId = #{carId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.rentcar.pojo.CarExample" >
        delete from car
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.rentcar.pojo.Car" >
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="carId">
            SELECT LAST_INSERT_ID() AS carId
        </selectKey>

        insert into car (carId, plateNumber, color,
        `desc`, type, frameId,
            brand, img, rentFee, 
            deposit, capacity, initFuel, 
            status, belong)
        values (#{carId,jdbcType=INTEGER}, #{plateNumber,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
            #{desc,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{frameId,jdbcType=VARCHAR}, 
            #{brand,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{rentFee,jdbcType=REAL}, 
            #{deposit,jdbcType=REAL}, #{capacity,jdbcType=REAL}, #{initFuel,jdbcType=REAL}, 
            #{status,jdbcType=VARCHAR}, #{belong,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.rentcar.pojo.Car" >
        insert into car
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="carId != null" >
                carId,
            </if>
            <if test="plateNumber != null" >
                plateNumber,
            </if>
            <if test="color != null" >
                color,
            </if>
            <if test="desc != null" >
                `desc`,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="frameId != null" >
                frameId,
            </if>
            <if test="brand != null" >
                brand,
            </if>
            <if test="img != null" >
                img,
            </if>
            <if test="rentFee != null" >
                rentFee,
            </if>
            <if test="deposit != null" >
                deposit,
            </if>
            <if test="capacity != null" >
                capacity,
            </if>
            <if test="initFuel != null" >
                initFuel,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="belong != null" >
                belong,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="carId != null" >
                #{carId,jdbcType=INTEGER},
            </if>
            <if test="plateNumber != null" >
                #{plateNumber,jdbcType=VARCHAR},
            </if>
            <if test="color != null" >
                #{color,jdbcType=VARCHAR},
            </if>
            <if test="desc != null" >
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="frameId != null" >
                #{frameId,jdbcType=VARCHAR},
            </if>
            <if test="brand != null" >
                #{brand,jdbcType=VARCHAR},
            </if>
            <if test="img != null" >
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="rentFee != null" >
                #{rentFee,jdbcType=REAL},
            </if>
            <if test="deposit != null" >
                #{deposit,jdbcType=REAL},
            </if>
            <if test="capacity != null" >
                #{capacity,jdbcType=REAL},
            </if>
            <if test="initFuel != null" >
                #{initFuel,jdbcType=REAL},
            </if>
            <if test="status != null" >
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="belong != null" >
                #{belong,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.rentcar.pojo.CarExample" resultType="java.lang.Integer" >
        select count(*) from car
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update car
        <set >
            <if test="record.carId != null" >
                carId = #{record.carId,jdbcType=INTEGER},
            </if>
            <if test="record.plateNumber != null" >
                plateNumber = #{record.plateNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.color != null" >
                color = #{record.color,jdbcType=VARCHAR},
            </if>
            <if test="record.desc != null" >
                `desc` = #{record.desc,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.frameId != null" >
                frameId = #{record.frameId,jdbcType=VARCHAR},
            </if>
            <if test="record.brand != null" >
                brand = #{record.brand,jdbcType=VARCHAR},
            </if>
            <if test="record.img != null" >
                img = #{record.img,jdbcType=VARCHAR},
            </if>
            <if test="record.rentFee != null" >
                rentFee = #{record.rentFee,jdbcType=REAL},
            </if>
            <if test="record.deposit != null" >
                deposit = #{record.deposit,jdbcType=REAL},
            </if>
            <if test="record.capacity != null" >
                capacity = #{record.capacity,jdbcType=REAL},
            </if>
            <if test="record.initFuel != null" >
                initFuel = #{record.initFuel,jdbcType=REAL},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.belong != null" >
                belong = #{record.belong,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update car
        set carId = #{record.carId,jdbcType=INTEGER},
            plateNumber = #{record.plateNumber,jdbcType=VARCHAR},
            color = #{record.color,jdbcType=VARCHAR},
        `desc` = #{record.desc,jdbcType=VARCHAR},
            type = #{record.type,jdbcType=VARCHAR},
            frameId = #{record.frameId,jdbcType=VARCHAR},
            brand = #{record.brand,jdbcType=VARCHAR},
            img = #{record.img,jdbcType=VARCHAR},
            rentFee = #{record.rentFee,jdbcType=REAL},
            deposit = #{record.deposit,jdbcType=REAL},
            capacity = #{record.capacity,jdbcType=REAL},
            initFuel = #{record.initFuel,jdbcType=REAL},
            status = #{record.status,jdbcType=VARCHAR},
            belong = #{record.belong,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.rentcar.pojo.Car" >
        update car
        <set >
            <if test="plateNumber != null" >
                plateNumber = #{plateNumber,jdbcType=VARCHAR},
            </if>
            <if test="color != null" >
                color = #{color,jdbcType=VARCHAR},
            </if>
            <if test="desc != null" >
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="frameId != null" >
                frameId = #{frameId,jdbcType=VARCHAR},
            </if>
            <if test="brand != null" >
                brand = #{brand,jdbcType=VARCHAR},
            </if>
            <if test="img != null" >
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="rentFee != null" >
                rentFee = #{rentFee,jdbcType=REAL},
            </if>
            <if test="deposit != null" >
                deposit = #{deposit,jdbcType=REAL},
            </if>
            <if test="capacity != null" >
                capacity = #{capacity,jdbcType=REAL},
            </if>
            <if test="initFuel != null" >
                initFuel = #{initFuel,jdbcType=REAL},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="belong != null" >
                belong = #{belong,jdbcType=INTEGER},
            </if>
        </set>
        where carId = #{carId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.rentcar.pojo.Car" >
        update car
        set plateNumber = #{plateNumber,jdbcType=VARCHAR},
            color = #{color,jdbcType=VARCHAR},
            `desc` = #{desc,jdbcType=VARCHAR},
            type = #{type,jdbcType=VARCHAR},
            frameId = #{frameId,jdbcType=VARCHAR},
            brand = #{brand,jdbcType=VARCHAR},
            img = #{img,jdbcType=VARCHAR},
            rentFee = #{rentFee,jdbcType=REAL},
            deposit = #{deposit,jdbcType=REAL},
            capacity = #{capacity,jdbcType=REAL},
            initFuel = #{initFuel,jdbcType=REAL},
            status = #{status,jdbcType=VARCHAR},
            belong = #{belong,jdbcType=INTEGER}
        where carId = #{carId,jdbcType=INTEGER}
    </update>
</mapper>